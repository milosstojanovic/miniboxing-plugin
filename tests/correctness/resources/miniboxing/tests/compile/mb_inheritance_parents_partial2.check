Specializing class FF1...
  // interface:
  abstract trait FF1[T, R] extends Object {
  }
  // specialized class:
  class FF1_JJ[Tsp, Rsp] extends FF1[Tsp,Rsp] {
    def <init>(val miniboxing|tests|compile|inheritance|FF1_JJ|T_TypeTag: Byte,val miniboxing|tests|compile|inheritance|FF1_JJ|R_TypeTag: Byte): miniboxing.tests.compile.inheritance.FF1_JJ[Tsp,Rsp] // is a specialized implementation of constructor FF1
    private[this] val miniboxing|tests|compile|inheritance|FF1_JJ|R_TypeTag: Byte // is a type tag
    private[this] val miniboxing|tests|compile|inheritance|FF1_JJ|T_TypeTag: Byte // is a type tag
  }
  // specialized class:
  class FF1_LJ[Tsp, Rsp] extends FF1[Tsp,Rsp] {
    def <init>(val miniboxing|tests|compile|inheritance|FF1_LJ|R_TypeTag: Byte): miniboxing.tests.compile.inheritance.FF1_LJ[Tsp,Rsp] // is a specialized implementation of constructor FF1
    private[this] val miniboxing|tests|compile|inheritance|FF1_LJ|R_TypeTag: Byte // is a type tag
  }
  // specialized class:
  class FF1_JL[Tsp, Rsp] extends FF1[Tsp,Rsp] {
    def <init>(val miniboxing|tests|compile|inheritance|FF1_JL|T_TypeTag: Byte): miniboxing.tests.compile.inheritance.FF1_JL[Tsp,Rsp] // is a specialized implementation of constructor FF1
    private[this] val miniboxing|tests|compile|inheritance|FF1_JL|T_TypeTag: Byte // is a type tag
  }
  // specialized class:
  class FF1_LL[Tsp, Rsp] extends FF1[Tsp,Rsp] {
    def <init>(): miniboxing.tests.compile.inheritance.FF1_LL[Tsp,Rsp]     // is a specialized implementation of constructor FF1
  }
Specializing class PPredicate...
  // interface:
  abstract trait PPredicate[T] extends FF1[T,Int] {
  }
  // specialized class:
  class PPredicate_J[Tsp] extends FF1_JJ[Tsp,Int] with PPredicate[Tsp] {
    def <init>(val miniboxing|tests|compile|inheritance|PPredicate_J|T_TypeTag: Byte): miniboxing.tests.compile.inheritance.PPredicate_J[Tsp] // is a specialized implementation of constructor PPredicate
    private[this] val miniboxing|tests|compile|inheritance|PPredicate_J|T_TypeTag: Byte // is a type tag
  }
  // specialized class:
  class PPredicate_L[Tsp] extends FF1_LJ[Tsp,Int] with PPredicate[Tsp] {
    def <init>(): miniboxing.tests.compile.inheritance.PPredicate_L[Tsp]   // is a specialized implementation of constructor PPredicate
  }
[Now checking: minibox-inject]
[Now checking: minibox-bridge]
[Not checkable: minibox-coerce]
Miniboxing plugin warning: Optimizing `MbArray` is only possible if you allow the plugin to use both long and double encodings (remove `P:minibox:Yone-way` compiler option). `MbArray`-s will be generic and will box.
[[syntax trees at end of            minibox-commit]] // newSource1.scala
package miniboxing.tests.compile.inheritance {
  abstract trait FF1[@miniboxed T, @miniboxed R] extends Object;
  class FF1_JJ[Tsp, Rsp] extends Object with miniboxing.tests.compile.inheritance.FF1[Tsp,Rsp] {
    <paramaccessor> private[this] val miniboxing|tests|compile|inheritance|FF1_JJ|R_TypeTag: Byte = _;
    <paramaccessor> private[this] val miniboxing|tests|compile|inheritance|FF1_JJ|T_TypeTag: Byte = _;
    def <init>(miniboxing|tests|compile|inheritance|FF1_JJ|T_TypeTag: Byte, miniboxing|tests|compile|inheritance|FF1_JJ|R_TypeTag: Byte): miniboxing.tests.compile.inheritance.FF1_JJ[Tsp,Rsp] = {
      FF1_JJ.super.<init>();
      ()
    }
  };
  class FF1_JL[Tsp, Rsp] extends Object with miniboxing.tests.compile.inheritance.FF1[Tsp,Rsp] {
    <paramaccessor> private[this] val miniboxing|tests|compile|inheritance|FF1_JL|T_TypeTag: Byte = _;
    def <init>(miniboxing|tests|compile|inheritance|FF1_JL|T_TypeTag: Byte): miniboxing.tests.compile.inheritance.FF1_JL[Tsp,Rsp] = {
      FF1_JL.super.<init>();
      ()
    }
  };
  class FF1_LJ[Tsp, Rsp] extends Object with miniboxing.tests.compile.inheritance.FF1[Tsp,Rsp] {
    <paramaccessor> private[this] val miniboxing|tests|compile|inheritance|FF1_LJ|R_TypeTag: Byte = _;
    def <init>(miniboxing|tests|compile|inheritance|FF1_LJ|R_TypeTag: Byte): miniboxing.tests.compile.inheritance.FF1_LJ[Tsp,Rsp] = {
      FF1_LJ.super.<init>();
      ()
    }
  };
  class FF1_LL[Tsp, Rsp] extends Object with miniboxing.tests.compile.inheritance.FF1[Tsp,Rsp] {
    def <init>(): miniboxing.tests.compile.inheritance.FF1_LL[Tsp,Rsp] = {
      FF1_LL.super.<init>();
      ()
    }
  };
  abstract trait PPredicate[@miniboxed T] extends Object;
  class PPredicate_J[Tsp] extends miniboxing.tests.compile.inheritance.FF1_JJ[Tsp,Int] with miniboxing.tests.compile.inheritance.PPredicate[Tsp] {
    <paramaccessor> private[this] val miniboxing|tests|compile|inheritance|PPredicate_J|T_TypeTag: Byte = _;
    def <init>(miniboxing|tests|compile|inheritance|PPredicate_J|T_TypeTag: Byte): miniboxing.tests.compile.inheritance.PPredicate_J[Tsp] = {
      PPredicate_J.super.<init>(miniboxing|tests|compile|inheritance|PPredicate_J|T_TypeTag, 5);
      ()
    }
  };
  class PPredicate_L[Tsp] extends miniboxing.tests.compile.inheritance.FF1_LJ[Tsp,Int] with miniboxing.tests.compile.inheritance.PPredicate[Tsp] {
    def <init>(): miniboxing.tests.compile.inheritance.PPredicate_L[Tsp] = {
      PPredicate_L.super.<init>(5);
      ()
    }
  }
}
[Now checking: minibox-commit]