[Now checking: minibox-inject]
[Now checking: minibox-bridge]
[Not checkable: minibox-coerce]
Miniboxing plugin warning: Optimizing `MbArray` is only possible if you allow the plugin to use both long and double encodings (remove `P:minibox:Yone-way` compiler option). `MbArray`-s will be generic and will box.
[[syntax trees at end of            minibox-commit]] // newSource1.scala
package miniboxing.tests.compile.sup1 {
  abstract trait C[@miniboxed T] extends Object {
    def foo(t: T): T;
    def foo_J(T_TypeTag: Byte, t: Long): Long
  };
  class C_J[Tsp] extends Object with miniboxing.tests.compile.sup1.C[Tsp] {
    <paramaccessor> private[this] val miniboxing|tests|compile|sup1|C_J|T_TypeTag: Byte = _;
    def <init>(miniboxing|tests|compile|sup1|C_J|T_TypeTag: Byte): miniboxing.tests.compile.sup1.C_J[Tsp] = {
      C_J.super.<init>();
      ()
    };
    def foo(t: Tsp): Tsp = MiniboxConversions.this.minibox2box[Tsp](C_J.this.foo_J(C_J.this.miniboxing|tests|compile|sup1|C_J|T_TypeTag, MiniboxConversions.this.box2minibox_tt[Tsp](t, C_J.this.miniboxing|tests|compile|sup1|C_J|T_TypeTag)), C_J.this.miniboxing|tests|compile|sup1|C_J|T_TypeTag);
    def foo_J(T_TypeTag: Byte, t: Long): Long = MiniboxConversions.this.box2minibox_tt[Tsp](scala.this.Predef.???(), T_TypeTag)
  };
  class C_L[Tsp] extends Object with miniboxing.tests.compile.sup1.C[Tsp] {
    def <init>(): miniboxing.tests.compile.sup1.C_L[Tsp] = {
      C_L.super.<init>();
      ()
    };
    def foo(t: Tsp): Tsp = scala.this.Predef.???();
    def foo_J(T_TypeTag: Byte, t: Long): Long = MiniboxConversions.this.box2minibox_tt[Tsp](C_L.this.foo(MiniboxConversions.this.minibox2box[Tsp](t, T_TypeTag)), T_TypeTag)
  };
  class D extends miniboxing.tests.compile.sup1.C_J[Int] {
    def <init>(): miniboxing.tests.compile.sup1.D = {
      D.super.<init>(5);
      ()
    };
    override def foo(i: Int): Int = MiniboxConversions.this.minibox2int(D.this.foo_J(5, MiniboxConversions.this.int2minibox(i)));
    override def foo_J(T_TypeTag: Byte, t: Long): Long = D.super.foo_J(5, MiniboxConversions.this.int2minibox(3))
  }
}
[Now checking: minibox-commit]