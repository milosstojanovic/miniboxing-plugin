Specializing class HijackMe2...
  // interface:
  abstract trait HijackMe2[T] extends Object {
    def hijackMeToo[U](t: T,u: U): Nothing
    def hijackMeToo_J[U](val T_TypeTag: Byte,t: T @storage[Long],u: U): Nothing
    def hijackMeToo_J_n_J[U](val U_TypeTag: Byte,val T_TypeTag: Byte,t: T @storage[Long],u: U @storage[Long]): Nothing
    def hijackMeToo_n_J[U](val U_TypeTag: Byte,t: T,u: U @storage[Long]): Nothing
  }
  // specialized class:
  class HijackMe2_J[Tsp] extends HijackMe2[Tsp] {
    def <init>(val miniboxing|tests|compile|HijackMe2_J|T_TypeTag: Byte): miniboxing.tests.compile.HijackMe2_J[Tsp] // is a specialized implementation of constructor HijackMe2
    def hijackMeToo[U](t: Tsp,u: U): Nothing                               // is a forwarder to the specialized member
    def hijackMeToo_J[U](val T_TypeTag: Byte,t: Tsp @storage[Long],u: U): Nothing // is a specialized implementation of method hijackMeToo
    def hijackMeToo_J_n_J[U](val U_TypeTag: Byte,val T_TypeTag: Byte,t: Tsp @storage[Long],u: U @storage[Long]): Nothing // is a specialized implementation of method hijackMeToo
    def hijackMeToo_n_J[U](val U_TypeTag: Byte,t: Tsp,u: U @storage[Long]): Nothing // is a forwarder to the specialized member
    private[this] val miniboxing|tests|compile|HijackMe2_J|T_TypeTag: Byte // is a type tag
  }
  // specialized class:
  class HijackMe2_L[Tsp] extends HijackMe2[Tsp] {
    def <init>(): miniboxing.tests.compile.HijackMe2_L[Tsp]                // is a specialized implementation of constructor HijackMe2
    def hijackMeToo[U](t: Tsp,u: U): Nothing                               // is a specialized implementation of method hijackMeToo
    def hijackMeToo_J[U](val T_TypeTag: Byte,t: Tsp @storage[Long],u: U): Nothing // is a forwarder to the specialized member
    def hijackMeToo_J_n_J[U](val U_TypeTag: Byte,val T_TypeTag: Byte,t: Tsp @storage[Long],u: U @storage[Long]): Nothing // is a forwarder to the specialized member
    def hijackMeToo_n_J[U](val U_TypeTag: Byte,t: Tsp,u: U @storage[Long]): Nothing // is a specialized implementation of method hijackMeToo
  }
[Now checking: minibox-inject]
[Now checking: minibox-bridge]
[Not checkable: minibox-coerce]
Miniboxing plugin warning: Optimizing `MbArray` is only possible if you allow the plugin to use both long and double encodings (remove `P:minibox:Yone-way` compiler option). `MbArray`-s will be generic and will box.
[[syntax trees at end of            minibox-commit]] // newSource1.scala
package miniboxing.tests.compile {
  abstract trait HijackMe2[@miniboxed T] extends Object {
    def hijackMeToo[@miniboxed U](t: T, u: U): Nothing;
    def hijackMeToo_n_J[U](U_TypeTag: Byte, t: T, u: Long): Nothing;
    def hijackMeToo_J[@miniboxed U](T_TypeTag: Byte, t: Long, u: U): Nothing;
    def hijackMeToo_J_n_J[U](U_TypeTag: Byte, T_TypeTag: Byte, t: Long, u: Long): Nothing
  };
  class HijackMe2_J[Tsp] extends Object with miniboxing.tests.compile.HijackMe2[Tsp] {
    <paramaccessor> private[this] val miniboxing|tests|compile|HijackMe2_J|T_TypeTag: Byte = _;
    def <init>(miniboxing|tests|compile|HijackMe2_J|T_TypeTag: Byte): miniboxing.tests.compile.HijackMe2_J[Tsp] = {
      HijackMe2_J.super.<init>();
      ()
    };
    def hijackMeToo[@miniboxed U](t: Tsp, u: U): Nothing = HijackMe2_J.this.hijackMeToo_J[U](HijackMe2_J.this.miniboxing|tests|compile|HijackMe2_J|T_TypeTag, MiniboxConversions.this.box2minibox_tt[Tsp](t, HijackMe2_J.this.miniboxing|tests|compile|HijackMe2_J|T_TypeTag), u);
    def hijackMeToo_n_J[U](U_TypeTag: Byte, t: Tsp, u: Long): Nothing = HijackMe2_J.this.hijackMeToo_J_n_J[U](U_TypeTag, HijackMe2_J.this.miniboxing|tests|compile|HijackMe2_J|T_TypeTag, MiniboxConversions.this.box2minibox_tt[Tsp](t, HijackMe2_J.this.miniboxing|tests|compile|HijackMe2_J|T_TypeTag), u);
    def hijackMeToo_J[@miniboxed U](T_TypeTag: Byte, t: Long, u: U): Nothing = scala.this.Predef.???();
    def hijackMeToo_J_n_J[U](U_TypeTag: Byte, T_TypeTag: Byte, t: Long, u: Long): Nothing = scala.this.Predef.???()
  };
  class HijackMe2_L[Tsp] extends Object with miniboxing.tests.compile.HijackMe2[Tsp] {
    def <init>(): miniboxing.tests.compile.HijackMe2_L[Tsp] = {
      HijackMe2_L.super.<init>();
      ()
    };
    def hijackMeToo[@miniboxed U](t: Tsp, u: U): Nothing = scala.this.Predef.???();
    def hijackMeToo_n_J[U](U_TypeTag: Byte, t: Tsp, u: Long): Nothing = scala.this.Predef.???();
    def hijackMeToo_J[@miniboxed U](T_TypeTag: Byte, t: Long, u: U): Nothing = HijackMe2_L.this.hijackMeToo[U](MiniboxConversions.this.minibox2box[Tsp](t, T_TypeTag), u);
    def hijackMeToo_J_n_J[U](U_TypeTag: Byte, T_TypeTag: Byte, t: Long, u: Long): Nothing = HijackMe2_L.this.hijackMeToo_n_J[U](U_TypeTag, MiniboxConversions.this.minibox2box[Tsp](t, T_TypeTag), u)
  }
}
[Now checking: minibox-commit]