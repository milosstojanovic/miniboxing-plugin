[[syntax trees at end of            minibox-inject]] // newSource1.scala
package miniboxing.tests.compile.bug69.red1 {
  object Test extends Object {
    def <init>(): miniboxing.tests.compile.bug69.red1.Test.type = {
      Test.super.<init>();
      ()
    };
    def foo(): Nothing = {
      abstract trait C[@miniboxed T] extends Object;
      class C_J[Tsp] extends Object with C[Tsp] {
        <paramaccessor> private[this] val miniboxing|tests|compile|bug69|red1|Test|C_J|T_TypeTag: Byte = _;
        def <init>(miniboxing|tests|compile|bug69|red1|Test|C_J|T_TypeTag: Byte): C_J[Tsp] = {
          C_J.super.<init>();
          ()
        }
      };
      class C_L[Tsp] extends Object with C[Tsp] {
        def <init>(): C_L[Tsp] = {
          C_L.super.<init>();
          ()
        }
      };
      class D extends Object {
        def <init>(): D = {
          D.super.<init>();
          ()
        }
      };
      scala.this.Predef.???()
    }
  }
}
Miniboxing plugin warning: Optimizing `MbArray` is only possible if you allow the plugin to use both long and double encodings (remove `P:minibox:Yone-way` compiler option). `MbArray`-s will be generic and will box.